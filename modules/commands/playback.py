import discord
from typing import Any


# C√°c h√†m d∆∞·ªõi ƒë√¢y kh√¥ng ƒëƒÉng k√Ω l·ªánh tr·ª±c ti·∫øp; bot.py s·∫Ω g·ªçi t·ªõi.

async def handle_play(runtime: Any, ctx_or_interaction: Any, query: str) -> None:
    """Chia s·∫ª logic x·ª≠ l√Ω ph√°t nh·∫°c (play) cho text/slash.
    runtime: ƒë·ªëi t∆∞·ª£ng gi·ªØ bot, get_player_for_ctx, STREAM_PROFILE.
    """
    await runtime.handle_play_request(ctx_or_interaction, query)

async def handle_pause(bot: discord.Client, ctx_or_interaction: Any) -> None:
    vc = discord.utils.get(bot.voice_clients, guild=ctx_or_interaction.guild)
    if not vc or not vc.is_playing():
        # g·ª≠i theo ki·ªÉu context
        if hasattr(ctx_or_interaction, "response"):
            await ctx_or_interaction.response.send_message("Kh√¥ng c√≥ b√†i nh·∫°c n√†o ƒëang ph√°t", ephemeral=True)
        else:
            await ctx_or_interaction.send("Kh√¥ng c√≥ b√†i nh·∫°c n√†o ƒëang ph√°t")
        return
    vc.pause()
    if hasattr(ctx_or_interaction, "response"):
        await ctx_or_interaction.response.send_message("‚è∏Ô∏è ƒê√£ t·∫°m d·ª´ng.", ephemeral=True)
    else:
        await ctx_or_interaction.send("‚è∏Ô∏è ƒê√£ t·∫°m d·ª´ng")

async def handle_resume(bot: discord.Client, ctx_or_interaction: Any) -> None:
    vc = discord.utils.get(bot.voice_clients, guild=ctx_or_interaction.guild)
    if not vc or not vc.is_paused():
        if hasattr(ctx_or_interaction, "response"):
            await ctx_or_interaction.response.send_message("Kh√¥ng c√≥ b√†i nh·∫°c n√†o b·ªã t·∫°m d·ª´ng", ephemeral=True)
        else:
            await ctx_or_interaction.send("Kh√¥ng c√≥ b√†i nh·∫°c n√†o b·ªã t·∫°m d·ª´ng")
        return
    vc.resume()
    if hasattr(ctx_or_interaction, "response"):
        await ctx_or_interaction.response.send_message("‚ñ∂Ô∏è Ti·∫øp t·ª•c ph√°t", ephemeral=True)
    else:
        await ctx_or_interaction.send("‚ñ∂Ô∏è ƒê√£ ti·∫øp t·ª•c ph√°t")

async def handle_skip(bot: discord.Client, players: dict[int, Any], ctx_or_interaction: Any) -> None:
    vc = discord.utils.get(bot.voice_clients, guild=ctx_or_interaction.guild)
    if not vc or not vc.is_playing():
        if hasattr(ctx_or_interaction, "response"):
            await ctx_or_interaction.response.send_message("Kh√¥ng c√≥ nh·∫°c ƒëang ph√°t ƒë·ªÉ b·ªè qua", ephemeral=True)
        else:
            await ctx_or_interaction.send("Kh√¥ng c√≥ b√†i nh·∫°c n√†o ƒëang ph√°t ƒë·ªÉ b·ªè qua")
        return
    player = players.get(ctx_or_interaction.guild.id)
    if not player:
        vc.stop()
        if hasattr(ctx_or_interaction, "response"):
            await ctx_or_interaction.response.send_message("‚è≠Ô∏è ƒê√£ skip b√†i hi·ªán t·∫°i", ephemeral=True)
        else:
            await ctx_or_interaction.send("‚è≠Ô∏è ƒê√£ skip b√†i hi·ªán t·∫°i")
        return
    if player.queue.empty():
        if hasattr(ctx_or_interaction, "response"):
            await ctx_or_interaction.response.send_message(
                "Kh√¥ng c√≥ b√†i nh·∫°c n√†o k·∫ø ti·∫øp ƒë·ªÉ m√¨nh chuy·ªÉn qua, b·∫°n th√™m b√†i h√°t m·ªõi v√†o nh√© üòã",
                ephemeral=True,
            )
        else:
            await ctx_or_interaction.send(
                "Kh√¥ng c√≥ b√†i nh·∫°c n√†o k·∫ø ti·∫øp ƒë·ªÉ m√¨nh chuy·ªÉn qua, b·∫°n th√™m b√†i h√°t m·ªõi v√†o nh√© üòã"
            )
        return
    if getattr(player, "loop_one", False):
        player._suppress_loop_requeue_once = True
    vc.stop()
    if hasattr(ctx_or_interaction, "response"):
        await ctx_or_interaction.response.send_message("‚è≠Ô∏è ƒê√£ skip b√†i hi·ªán t·∫°i", ephemeral=True)
    else:
        await ctx_or_interaction.send("‚è≠Ô∏è ƒê√£ skip b√†i hi·ªán t·∫°i")

async def handle_stop(bot: discord.Client, players: dict[int, Any], ctx_or_interaction: Any) -> None:
    vc = discord.utils.get(bot.voice_clients, guild=ctx_or_interaction.guild)
    if vc:
        try:
            vc.stop()
        except Exception:
            pass
    player = players.get(ctx_or_interaction.guild.id)
    if player:
        try:
            await player.disable_loop()
        except Exception:
            pass
        try:
            await player.clear_all()
        except Exception:
            pass
        try:
            if player.vc and getattr(player.vc, "is_playing", lambda: False)():
                player.vc.stop()
        except Exception:
            pass
        try:
            player.current = None
            if player.now_update_task and not player.now_update_task.done():
                player.now_update_task.cancel()
            player.now_message = None
        except Exception:
            pass
    if hasattr(ctx_or_interaction, "response"):
        await ctx_or_interaction.response.send_message("‚èπÔ∏è ƒê√£ d·ª´ng ph√°t v√† x√≥a h√†ng ƒë·ª£i", ephemeral=True)
    else:
        await ctx_or_interaction.send("‚èπÔ∏è ƒê√£ d·ª´ng ph√°t v√† x√≥a h√†ng ƒë·ª£i")
